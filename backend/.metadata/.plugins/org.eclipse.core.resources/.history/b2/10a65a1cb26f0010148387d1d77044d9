package com.elearning.backend.service;

import java.util.ArrayList;
import java.util.List;

import org.modelmapper.ModelMapper;
import org.springframework.stereotype.Service;

import com.elearning.backend.dto.ApiResponse;
import com.elearning.backend.dto.UserDTO;
import com.elearning.backend.dto.UserRegistrationDTO;
import com.elearning.backend.entity.Role;
import com.elearning.backend.entity.User;
import com.elearning.backend.exception.EmailAlreadyExistsException;
import com.elearning.backend.repository.UserRepository;

import lombok.RequiredArgsConstructor;

import com.elearning.backend.exception.EmailAlreadyExistsException;
@Service
@RequiredArgsConstructor
public class UserServiceImpl implements UserService {

	
	private final  UserRepository userRepository;
    private final ModelMapper modelMapper;
    
	

	@Override
	public ApiResponse registerUser(UserRegistrationDTO userDTO) {
		// TODO Auto-generated method stub
		
//		if(userRepository.findByEmail(userDTO.getEmail()).isPresent())
//		{
//			throw new EmailAlreadyExistsException("Email already registered");
//		}
		
		User user = modelMapper.map(userDTO, User.class);
		user.setRole(Role.ROLE_STUDENT);
		System.out.println("Mapped user = " + user);
		
		userRepository.save(user);
		
		return new ApiResponse("User added Successfully " );
		
		
	}



	@Override
	public List<UserDTO> getAllUsers() {
		// TODO Auto-generated method stub
		List<UserDTO> userDtos = new ArrayList<>();
		List<User> users = userRepository.findAll();
		for (User us: users)
		{
			UserDTO dto  = modelMapper.map(us, UserDTO.class);
			userDtos.add(dto);
		}
		
		return userDtos;
	}

}
